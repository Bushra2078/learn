### YamlMime:ModuleUnit
uid: learn.wwl.guided-project-develop-conditional-branching-looping.knowledge-check
title: Knowledge check
metadata:
  title: Knowledge check
  description: "Knowledge check"
  ms.date: 02/24/2023
  author: wwlpublish
  ms.author: cahowd
  ms.topic: interactive-tutorial
  ms.prod: learning-azure
durationInMinutes: 3
quiz:
  questions:
  - content: "When is it appropriate to use a `switch-case` construct rather than a `if-elseif-else` construct?"
    choices:
    - content: "When the number of `else if` code blocks required is greater than 2-3."
      isCorrect: true
      explanation: "Correct! When the number of `else if` code blocks becomes larger than 2-3, the code can become difficult to read, and the `switch-case` construct is preferable"
    - content: "When the number of `case` patterns is small."
      isCorrect: false
      explanation: "Incorrect. If there are fewer than 2-3 `case` patterns in the selection list of a `switch` statement, an `if-elseif-else` construct may be the better choice."
    - content: "When the selection statement is inside of a loop."
      isCorrect: false
      explanation: "Incorrect. Whether the selection statement is inside of a loop or not makes not difference when choosing between a `switch-case` construct and a `if-elseif-else` construct."
  - content: "Why should a developer choose a `for` statement rather than a `foreach` statement when processing the contents of a multidimensional array?"
    choices:
    - content: "`for` statements do a better job of examining each array item separately."
      isCorrect: false
      explanation: "Incorrect. A `foreach` statement will process each array item separately."
    - content: "`foreach` statements do a better job of examining each array item separately."
      isCorrect: false
      explanation: "Incorrect. Although a `foreach` statement will process each array item separately, that is more about when to choose a `foreach` rather than when to choose a `for` statement."
    - content: "`for` statements enable us to treat array dimensions separately."
      isCorrect: true
      explanation: "Correct! When processing the contents of a multidimensional array, we often want to loop through the array dimensions separately. The `for` statement provides better support for doing this."
  - content: "Which of the following describes a reason why it's important to scope a variable at its lowest necessary level?"
    choices:
    - content: "It ensures that when a variable is declared outside of a code block, the variable can be accessed inside the code block before it has been assigned a value."
      isCorrect: false
      explanation: "Incorrect. A variable that is declared outside of a code block, must be assigned a value inside the code block before it can be accessed. If not, a build error will occur."
    - content: "It ensures that our app resources and security footprint are kept small."
      isCorrect: true
      explanation: "Correct. Keeping variables scoped at the lowest necessary level enables better resource management and helps to minimize the attack profile of the application."
    - content: "It ensures that the variable can be accessed within the lowest level code branches within our application."
      isCorrect: false
      explanation: "Incorrect. Scoping a variable at its lowest necessary level will not ensure the variable is accessible from all low level code branches within an application."