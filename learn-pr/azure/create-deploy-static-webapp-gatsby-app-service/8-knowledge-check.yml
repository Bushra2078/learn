### YamlMime:ModuleUnit
uid: learn.static-apps-gatsby.8-knowledge-check
title: Knowledge check
metadata:
  title: Knowledge check
  description: Four multiple-choice questions
  ms.date: 01/13/2023
  author: acomfort248
  ms.author: chnoring
  ms.topic: interactive-tutorial
  ms.prod: learning-azure
  ms.custom: team=nextgen
durationInMinutes: 4
content: |
  [!include[](includes/8-knowledge-check.md)]
quiz:
  title: Check your knowledge
  questions:
    - content: "How would you create a page in a Gatsby app?"
      choices:
        - content: Create a React component in the `pages` directory.
          isCorrect: true
          explanation: "Correct. By convention, any React component placed under the `pages` directory will become a page you can navigate to."
        - content: "Create a component anywhere in your project. Gatsby will scan the directory for React components."
          isCorrect: false
          explanation: "Incorrect. React components must be placed in a specific directory to create a page."
        - content: "Create a component with the `Page` prefix in its component name."
          isCorrect: false
          explanation: "Incorrect. The prefix of the component name doesn't create a page."
        - content: "Create a Markdown file and place it in the `pages` directory."
          isCorrect: false
          explanation: "Incorrect. Gatsby can be made to process Markdown files, but React components are what ultimately render the Markdown content. React components are also what is placed in the `pages` directory."
    - content: "How would you set up a default url for a page component?"
      choices:
        - content: "You wouldn't. Gatsby does this for you."
          isCorrect: true
          explanation: "Correct. As long as the React component is placed in `pages` directory the route will be set up automatically."
        - content: "Set up the route by implementing the Gatsby API in the file `gatsby-node.js`."
          isCorrect: false
          explanation: "Incorrect. This is the correct place to set up additional routes, but Gatsby sets up page component routes for you so there's no need to do this."
        - content: "Create an App.js entry component and, within it, a Route component and resolver component for each route."
          isCorrect: false
          explanation: "Incorrect. You don't need to create those components. Gatsby sets up page component routes for you."
        - content: "Create a React component in the `pages` directory and call the `registerRoute()` method, passing the route as a string together with the component."
          isCorrect: false
          explanation: "Incorrect. There's no such `registerRoute()` method. Just create a component in the `pages` directory."
    - content: "How would you use data from the in-memory data graph in your page component?"
      choices:
        - content: "Construct a page component and define a variable `query` that contains a GraphQL query. Then render the query response in the component."
          isCorrect: true
          explanation: "Correct. Page components can query for data by defining a GraphQL query in the same file as the component definition."
        - content: "Do a fetch request and render the response in the component."
          isCorrect: false
          explanation: "Incorrect. If you construct the page component and define a variable `query`, the component will render it. A fetch request isn't needed."
        - content: "Use Gatsby's `Data` component, set the `query` property to your query and render your Page component in its `render` property."
          isCorrect: false
          explanation: "Incorrect. During build time, Gatsby will input the query result into the component's `data` property."
        - content: "Use the function `useData()` and pass it your query as a parameter. It will return an object with a property `data` that contains your GraphQL response."
          isCorrect: false
          explanation: "Incorrect. You need to call the `graphql` function using the query as an argument and assign it to the variable query."
    - content: "What pre-steps would you need to take to deploy a Gatsby app using the Azure Static Web Apps service?"
      choices:
        - content: "Commit changes to the Git repo, build the project, and push it to GitHub"
          isCorrect: false
          explanation: "Incorrect. These steps are mostly correct except for the `build` part. There's no need to build the project first. Azure Static Web Apps service will look for a `build` task in the `scripts` section of your package.json file and invoke that."
        - content: "Commit changes to the Git repo and push it to GitHub"
          isCorrect: true
          explanation: "Correct. That is all you need to do to set up automated deployment. Azure Static Web Apps uses your GitHub repository information to create a GitHub Action that automatically builds and deploys your app."
        - content: "Run `gatsby build` to create a deployable directory. Compress the resulting `build` directory into a tarball. The tarball can now be uploaded to Azure Static Web Apps service."
          isCorrect: false
          explanation: "Incorrect. Azure Static Web Apps takes a GitHub URL, not a deployment package, as input."
        - content: "Run `gatsby deploy`. This will create a binary that you can deploy to Azure Static Web Apps service."
          isCorrect: false
          explanation: "Incorrect. There's no such command as `gatsby deploy`. Azure Static Web Apps takes a GitHub URL, not a deployment package, as input."
