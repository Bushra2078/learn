### YamlMime:ModuleUnit
uid: learn.aks-optimize-compute-costs.node-pools
title: How to configure multiple nodes and enable scale to zero using Azure Kubernetes Service

metadata:
  title: How to configure multiple nodes and enable scale to zero using Azure Kubernetes Service
  description: You can configure multiple node pools on AKS to run specific workloads. Node pools make use of virtual scale sets that allow you to set the number of nodes in a node pool. You can set the node count in a node pool to zero to optimize your cluster's running costs when nodes aren't used in a node pool. Here you'll explore how to configure a node pool to scale its node count to zero. 
  ms.date: 7/10/2020
  author: cryophobia
  ms.author: chrvaw
  ms.topic: interactive-tutorial
  ms.prod: learning-azure

durationInMinutes: 6
content: |
  [!include[](includes/2-node-pools.md)]
quiz:
  title: Check your knowledge
  questions:

  - content: "Suppose you have a software solution three critical components. The first component is a web application, the second is a service that process online orders, and the third is video rendering and analysis service that is run add-hoc and requires GPU-based VMs. How many node pools would you deploy in an Azure Kubernetes Service (AKS) cluster to manage the solution to optimize cost?"

    choices:
    - content: "Deploy a single node pool at the time of creating the AKS cluster. Assign three nodes per component for a total of nine nodes in the node pool using GPU-based VMs. Enabled autoscaling on the node pool."
      isCorrect: false
      explanation: "A single node pool doesn't give enough flexibility to scale different workloads cost effectively."
    - content: "Deploy three node pools on the AKS cluster. Create the first and second node pools with standard-sized VMs and the third node pool with specialized GPU-based VMs. Enabled the cluster autoscaler on all three node pools."
      isCorrect: false
      explanation: "An AKS cluster with three node pools will give you flexibility to scale the node count in each pool independently to meet resource demands for each of the components in the solution. However, you can't scale a node pool to zero once you enable the autoscaler. The GPU-based node pool won't be used cost effectivity for workloads that run ad-hoc."
    - content: "Deploy three node pools on the AKS cluster. Create the first and second node pools with standard-sized VMs and the third node pool with specialized GPU-based VMs. Enabled autoscaling on the first two node pools. Scale the GPU-based node pool manually."
      isCorrect: true
      explanation: "An AKS cluster with three node pools will give you flexibility to scale the node count in each pool independently to meet resource demands for each of the components in the solution. By not enabling the auto scaler on the GPU-based node pool, then node count is scalable to zero to optimize compute costs."

  - content: "Complete the following statement. The Kubernetes cluster autoscaler scales ..."
    choices:
    - content: "the number of workload replicas on an AKS cluster by monitoring the Metrics API every 30 seconds to decide if your application needs additional instances to meet the required demand"
      isCorrect: false
      explanation: "The horizontal pod autoscaler is responsible for scaling the number of workload replicas on an AKS cluster"
    - content: "the number of nodes by monitoring the Metrics API to scale the number of nodes up or down based on computing resources required."
      isCorrect: true
      explanation: "The Kubernetes cluster autoscaler is responsible for scaling the number of nodes up or down based on computing resources required."
    - content: "the number of node pools on an AKS cluster by monitoring the Metrics API every 30 seconds to decide if your application needs additional node pools to meet the required demand"
      isCorrect: false
      explanation: "The decision to add additional node pools to an AKS cluster is the responsibility of the cluster operator."
