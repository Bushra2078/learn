### YamlMime:Module
# Module uids are manually created by the content author and should follow the format (repo).(module-short-name). Keep it easy on yourself and keep the module-short-name the same as the module folder name.
uid: learn.design-for-performance-and-scalability
metadata:
  title: Design for performance and scalability
  description: In this module, we'll discuss how to design for performance and scalability
title: Design for performance and scalability
summary: Whether you're running a public facing application that has to handle massive amounts of traffic or an internal business API that handles critical data for internal systems, your users expect a system that performs well. Scaling your system to handle load, identifying network bottlenecks and optimizing your storage performance are important things you can do to ensure your users have the best experience. In this module we'll talk through details of how to make your application perform at its best.
abstract: |
  * Learn how scaling up and scaling out allows you to dynamically adjust capacity to your workload
  * Learn how to optimize network performance
  * Learn how to optimize storage and database performance
cardDescription: This is the card description of the Sample Module (this will show on the achievement badge)
# iconUrl is the image file that will be shown on the module card and the achievement badge granted at user completion of this module
iconUrl: http://via.placeholder.com/120x120
# Review the Docs Contributor Guide for levele, role, and product options
level: intermediate
role: solutionsArchitect
# achievement is currently a placeholder and will need to be updated
achievement: learn.placeholder.trophy
product: Azure
# Listing of all of the unit uids, in the order they should be displayed to the user in
units:
#- learn.design-for-performance-and-scalability.1-introduction
- learn.design-for-performance-and-scalability.2-scaling-up-and-scaling-out
- learn.design-for-performance-and-scalability.3-optimize-network-performance
- learn.design-for-performance-and-scalability.4-optimize-storage-performance
- learn.design-for-performance-and-scalability.5-identify-performance-bottlenecks-in-your-application
- learn.design-for-performance-and-scalability.6-summary