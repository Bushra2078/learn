### YamlMime:ModuleUnit
uid: learn.model-data-azure-cosmos-db-postgresql.knowledge-check
title: Knowledge check
metadata:
  unitType: knowledge_check
  title: Knowledge check
  description: Test your understanding of creating a database and altering its structure in Azure Cosmos DB for PostgreSQL.
  ms.custom:
    - ignite-2022
  ms.date: 09/22/2022
  author: seesharprun
  ms.author: sidandrews
  ms.reviewer: jonels
  ms.topic: unit
durationInMinutes: 3
content: |
quiz:
  questions:
  - content: "There's a distributed table to track the events. Suppose the app users want to categorize the events, and a small list of categories will be provided. What type of table would be used for these categories?"
    choices:
    - content: "Distributed table"
      isCorrect: false
      explanation: "Try again. A distributed table is meant for larger amounts of data."
    - content: "Local table"
      isCorrect: false
      explanation: "Try again. A local table lives on the coordinator node and isn't meant to be joined in queries with reference or distributed tables."
    - content: "Reference table"
      isCorrect: true
      explanation: "The categories table would be similar to the event_types and payment_merchants tables in this module."
  - content: "Which of these scenarios is incompatible for foreign keys in Azure Cosmos DB for PostgreSQL?"
    choices:
    - content: "Between reference tables and local tables"
      isCorrect: false
      explanation: "Try again. Azure Cosmos DB for PostgreSQL does support enforcing foreign keys between reference tables and local tables."
    - content: "From reference tables to distributed tables"
      isCorrect: true
      explanation: "In order for foreign keys to be enforced, the referencing and referenced rows need to be stored on the same node. Going from a reference table to a distributed table that spans multiple nodes isn't supported."
    - content: "From a distributed table to a reference table"
      isCorrect: false
      explanation: "Try again. Azure Cosmos DB for PostgreSQL does support enforcing foreign keys starting a distributed table and going to a reference table. The data integrity is enforceable since each worker node has its own copy of a reference table."
  - content: "The Woodgrove Bank developers added a payment_categories table. Which command will show the table and its distribution details?"
    choices:
    - content: "SELECT * FROM citus_tables;"
      isCorrect: true
      explanation: "The citus_tables query displays the table type, the distribution column, and the colocation ID."
    - content: "\\dt"
      isCorrect: false
      explanation: "Try again. \\dt lists all tables in the database. It doesn't include distribution information."
    - content: "\\d payment_categories"
      isCorrect: false
      explanation: "Try again. \\d lists the table's schema information. It doesn't include distribution information."
