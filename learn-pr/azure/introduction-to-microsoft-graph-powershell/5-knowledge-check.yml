### YamlMime:ModuleUnit
uid: learn.introduction-to-microsoft-graph-powershell.knowledge-check
title: Knowledge check
metadata:
  unitType: knowledge_check
  title: Knowledge check
  description: Check your knowledge of basic concepts in Microsoft Graph PowerShell
  ms.date: 7/12/2022
  author: msewaweru
  ms.author: eunicewaweru
  ms.topic: interactive-tutorial
  ms.prod: learning-azure # Edit as appropriate for your portfolio area
durationInMinutes: 5
###########################################################################
###
### General guidance (https://review.docs.microsoft.com/learn-docs/docs/id-guidance-knowledge-check)
###  - Questions are complete sentences ending with a question mark
###  - No true/false questions
###  - 3 answers per question
###  - All answers about the same length
###  - Numeric answers listed in sorted order
###  - No "All of the above" and/or "None of the above" as answer choices
###  - No "Not" or "Except" in questions
###  - No second person ("you") in the questions or answers
###  - Provide a meaningful explanation for both correct and incorrect answers
###
### Question content requirements:
###  - Write 5 questions
###  - Questions 1,2 must test this Learning Objective: "Describe how (attributes) of (product) work to (solve problem)"
###      Guidance: These two questions can be short, no need for a long scenario to analyze. Test if they understand how the product works.
###      Example: "What differentiates an action from a control action in a Logic App?"
###  - Questions 3,4,5 must test this Learning Objective: "Evaluate whether (product) is appropriate to (general product use case)"
###      Guidance: Use scenario questions that ask the learner to analyze a situation with the "when to use" criteria presented in the module.
###      Example: "A financial company is building a system to let brokers trade financial instruments. The system must monitor market conditions, detect changes, and execute trades. It will need to handle a large volume of transactions quickly. The faster it completes trades, the more of an advantage the company will have over its competitors. Which requirement of this system would be difficult for Azure Logic Apps to satisfy?"
###
###########################################################################
content: |
quiz:
  questions:
  - content: "An IT admin has recently installed Microsoft Graph PowerShell to administer various tasks in Azure AD. They are new to this module and would like to find cmdlets for different resources in the directory. What would be the BEST place for them to start?"
    choices:
    - content: "Run `Connect-MgGraph` to connect to the Azure AD directory and type run cmdlets based on `Verb-MgResource` format."
      isCorrect: false
      explanation: "Connect-MgGraph helps you sign in to your directory requesting the appropriate permissions."
    - content: "Run `Find-MgGraphCommand` to discover cmdlets associated with the resource name, for example, user."
      isCorrect: true
      explanation: "Find-MgGraphCommand helps you find cmdlets when you pass a resource name. It will also help you discover permissions required for the particular domain."
    - content: "Run `Find-MgGraphPermission` to discover the cmdlets associated with the particular domain "
      isCorrect: false
      explanation: " The Find-MgGraphPermission cmdlet helps find permissions and not cmdlets applicable for a certain domain, for example, user."
  - content: "For every feature that has an API in Microsoft Graph there should be an equivalent cmdlet in Microsoft Graph PowerShell. There are, however, instances where an API could be existing and the equivalent cmdlet is not yet available. Which cmdlet would be the most appropriate to use in such an instance?"
    choices:
    - content: "Invoke-MgGraphRequest"
      isCorrect: true
      explanation: "Invoke-MgGraphRequest issues REST API requests to Microsoft Graph API and can be useful for accessing an API for which there isn’t an equivalent cmdlet yet"
    - content: "Get-MgProfile"
      isCorrect: false
      explanation: "Microsoft Graph PowerShell targets two versions of the Microsoft Graph API and once can switch between the two versions. Get-MgProfile help you check your current profile to decide if you want to switch. "
    - content: "Find-MgGraphPermission"
      isCorrect: false
      explanation: "Find-MgGraphPermission helps you find permissions that are applicable to a certain domain."
  - content: "What makes Microsoft Graph PowerShell a cross-platform (Windows, Linux, and macOS) automation tool?"
    choices:
    - content: "Microsoft Graph PowerShell uses Microsoft Authentication Library which supports modern authentication."
      isCorrect: false
      explanation: "Microsoft Graph PowerShell supports modern authentication through Microsoft Authentication Library, but this does not make it a cross-platform tool."
    - content: "Microsoft Graph PowerShell provides commands for the entire Microsoft Graph API."
      isCorrect: false
      explanation: "Microsoft Graph PowerShell is PowerShell for the entire set of Microsoft Graph APIs, but this does not make it a cross-platform tool."
    - content: "Microsoft Graph PowerShell supports PowerShell 7 which is itself a cross-platform tool."
      isCorrect: true
      explanation: "PowerShell 7 is a cross-platform automation tool that is supported by Microsoft Graph PowerShell. This relation makes Microsoft Graph PowerShell a cross platform tool."
