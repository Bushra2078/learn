### YamlMime:ModuleUnit
uid: learn.ingest-query-data-using-azure-cosmos-db-postgresql.knowledge-check
title: Knowledge check
metadata:
  unitType: knowledge_check
  title: Knowledge check
  description: |
    Test your understanding of loading and querying data in Azure Cosmos DB for PostgreSQL distributed databases.
  ms.date: 09/26/2022
  author: seesharprun
  ms.author: sidandrews
  ms.reviewer: jonels
  ms.topic: interactive-tutorial
  ms.prod: learning-azure
durationInMinutes: 3
content: |
quiz:
  questions:
  - content: "Why must a value for the distribution column be specified when loading data into distributed tables in Azure Cosmos DB for PostgreSQL?"
    choices:
    - content: "The coordinator node uses the distribution column to correctly identify the shard into which data should be inserted."
      isCorrect: true
      explanation: "Correct. Each row in a distributed table is written to a shard based on the value of its distribution column. The coordinator hashes the row's distribution column and compares the hashed value to the assigned hash range for each shard. This comparison correctly identifies the shard into which data should be inserted."
    - content: "The distribution column for a distributed table is always its primary key field, so it must be included to ensure uniqueness."
      isCorrect: false
      explanation: "Try again. The distribution column on a table isn't required to be its primary key, and often won't be a primary key field to ensure the best query performance."
    - content: "Metadata tables on each worker node perform local lookups using the distribution column to locate the correct shard for the requested data."
      isCorrect: false
      explanation: "Try again. Metadata tables reside on and are managed by the coordinator node. The coordinator users those tables to determine the correct shard for requested data."
  - content: "What is the most performant and recommended method for executing INSERT/SELECT statements to ingest data into distributed tables?"
    choices:
    - content: "Pulling data to the coordinator"
      isCorrect: false
      explanation: "Try again. Pulling data to the coordinator is the least performant technique for executing INSERT/SELECT statements because all the data must pass through a single node."
    - content: "Repartition optimization"
      isCorrect: false
      explanation: "Try again. Repartition optimization requires moving data between nodes to complete the query, and this optimization makes it less performant than at least one other method."
    - content: "Using colocated source and destination tables"
      isCorrect: true
      explanation: "Correct! The coordinator to push query execution down for parallel execution on all nodes. This push occurs when the source source and destination tables are colocated and the SELECT/INSERT statements both include the distribution column."
  - content: "Repartition joins are disabled by default in Azure Cosmos DB for PostgreSQL. What command should you run to enable them?"
    choices:
    - content: "SET citus.enable_repartitioned_insert_select TO on;"
      isCorrect: false
      explanation: "Try again. The citus.enable_repartitioned_insert_select setting is used to allow or disallow repartitioning for INSERT/SELECT statements."
    - content: "SET citus.enable_repartition_joins TO on;"
      isCorrect: true
      explanation: "Correct! The citus.enable_repartition_joins setting must be set to on if repartition joins are required in the database."
    - content: "SELECT enable_repartitioning(true);"
      isCorrect: false
      explanation: "Try again. Azure Cosmos DB for PostgreSQL doesn't define a function named enable_repartitioning()."
