### YamlMime:ModuleUnit
uid: learn.azure-well-architected-cost-optimization.5-maximize-efficiency-of-cloud-spend
title: Maximize efficiency of cloud spend
metadata:
  title: Maximize efficiency of cloud spend
  description: Maximize efficiency of cloud spend
  ms.date: 05/19/2020
  author: jboeshart
  ms.author: jaboes
  ms.topic: interactive-tutorial
  ms.prod: learning-azure
durationInMinutes: 15
content: |
  [!include[](includes/5-maximize-efficiency-of-cloud-spend.md)]
quiz:
  title: Check your knowledge
  questions:
  - content: 'Your business stores PDF copies of all purchase orders. These files are infrequently accessed after initial upload and do not have a time-criticality associated with their retrieval. Which of the following storage tiers would be the best choice to reduce costs for long term storage?'
    choices:
    - content: 'Hot access tier'
      isCorrect: false
      explanation: 'The PDF files do not need the increased performance of the hot access tier, so this would not be a cost-effective choice.'
    - content: 'Cool access tier'
      isCorrect: false
      explanation: 'This could be a good choice for a transitional storage, but is not a cost-effective choice in the long term.'
    - content: 'Archive access tier'
      isCorrect: true
      explanation: 'This is the most cost-effective choice in the long term.'

  - content: 'Which of the following databases would be well-suited for elastic pools?'
    choices:
    - content: 'An ERP database that has consistent usage around the clock.'
      isCorrect: false
      explanation: 'This database is not a good candidate for elastic pools since it has consistent usage.'
    - content: 'Customer databases that have usage during the same period of time.'
      isCorrect: false
      explanation: 'These databases are used during the same time, and are not good candidates for elastic pools.'
    - content: 'Customer databases that are spread across time zones and have periods of intermittent usage.'
      isCorrect: true
      explanation: 'Since these databases are used intermittently, their resources could be shared, making them good candidates for elastic pools.'
