### YamlMime:ModuleUnit
uid: learn.wwl.explore-concepts-of-non-relational-data.knowledge-check
title: Knowledge check
metadata:
  title: Knowledge check
  description: "Knowledge check"
  ms.date: 07/12/2020
  author: wwlpublish
  ms.author: rcaper
  ms.topic: interactive-tutorial
  ms.prod: learning-azure
azureSandbox: false
durationInMinutes: 2
content: |
  [!include[](includes/5-knowledge-check.md)]
quiz:
  title: "Check your knowledge"
  questions:
  - content: "Which of the following services should you use to implement a non-relational database?"
    choices:
    - content: "Azure Cosmos DB"
      isCorrect: true
      explanation: "That's correct. Cosmos DB supports several common models pf non-relational database, include key-value stores, graph databases, document databases, and column family stores."
    - content: "Azure SQL Database"
      isCorrect: false
      explanation: "That's incorrect. Azure SQL Database is a relational database management system storing relational data."
    - content: "The Gremlin API"
      isCorrect: false
      explanation: "That's incorrect. The Gremlin API isn't a database. It's a language that lets you run queries against a Graph database."
  - content: "Which of the following is a characteristic of non-relational databases?"
    choices:
    - content: "Non-relational databases contain tables with flat fixed-column records"
      isCorrect: false
      explanation: "That's incorrect. Relational data provides tables with flat fixed-column records."
    - content: "Non-relational databases require you to use data normalization techniques to reduce data duplication"
      isCorrect: false
      explanation: "That's incorrect. Non-relational databases frequently contain duplicated data, to facilitate fast queries without necessitating that you join data from multiple records together."
    - content: "Non-relational databases are either schema free or have relaxed schemas"
      isCorrect: true
      explanation: "That's correct. Each entity in a non-relational database only has the fields it needs, and these fields can vary between different entities."
  - content: "You are building a system that monitors the temperature throughout a set of office blocks, and sets the air conditioning in each room in each block to maintain a pleasant ambient temperature. Your system has to manage the air conditioning in several thousand buildings spread across the country or region, and each building typically contains at least 100 air-conditioned rooms. What type of NoSQL data store is most appropriate for capturing the temperature data to enable it to be processed quickly?"
    choices:
    - content: "A key-value store"
      isCorrect: true
      explanation: "That's correct. A key-value store can ingest large volumes of data rapidly. A thermometer in each room can send the data to the database."
    - content: "A column family database"
      isCorrect: false
      explanation: "That's incorrect. A column family database is best suited for *wide* rows that can contain many thousands of columns."
    - content: "Write the temperatures to a blob in Azure Blob storage"
      isCorrect: false
      explanation: "That's incorrect. Blob storage is not an appropriate choice for this scenario."