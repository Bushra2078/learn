### YamlMime:ModuleUnit
uid: learn.wwl.combine-query-results-set-operators.knowledge-check
title: Knowledge check
metadata:
  title: Knowledge check
  description: "Knowledge check"
  ms.date: 09/08/2021
  author: wwlpublish
  ms.author: rcaper
  ms.topic: interactive-tutorial
  ms.prod: learning-azure
azureSandbox: false
sandbox: false
labModal: false
durationInMinutes: 5
quiz:
  questions:
  - content: "When combining the output of two sets, how does UNION and UNION all treat NULL values?"
    choices:
    - content: "A NULL in one set is treated as being equal to a NULL in another set."
      isCorrect: true
      explanation: "That's correct. NULLs are compared and treated as duplicates if they appear in both sets."
    - content: "Rows that contain NULL values are not returned because NULL values cannot be compared."
      isCorrect: false
      explanation: "That's incorrect. UNION and UNION ALL will return rows that contain NULL values."
    - content: "NULLs represent unknown values and cannot be compared. UNION and UNION ALL will return an error if sets contain NULLs."
      isCorrect: false
      explanation: "That's incorrect. UNION and UNION ALL will not return an error if the result sets being compared include NULLs."
  - content: "You have employee and customer query result sets, both of which containID(int) and country(nvarchar(20)) columns. You want to return a list of countries that appear in both result sets. Which set operator should you use?"
    choices:
    - content: "INTERSECT"
      isCorrect: true
      explanation: "That's correct. The INTERSECT set operator will return rows that are in both result sets."
    - content: "EXCEPT"
      isCorrect: false
      explanation: "That's incorrect. The EXCEPT set operator will return rows that are in one result set, but not the other."
    - content: "OUTER APPLY"
      isCorrect: false
      explanation: "That's incorrect. OUTER APPLY is a table operator will return rows from two result sets."
  - content: "When using structured error handling, where should the keywords COMMIT TRANSACTION be placed?"
    choices:
    - content: "Immediately before END TRY"
      isCorrect: true
      explanation: "That's correct. The keywords COMMIT TRANSACTION should be placed at the end of the TRY block, immediately before the END TRY keywords."
    - content: "Immediate after BEGIN TRY"
      isCorrect: false
      explanation: "That's incorrect. The BEGIN TRANSACTION keywords be placed immediately after BEGIN TRY."
    - content: "Immediately before END CATCH"
      isCorrect: false
      explanation: "That's incorrect. The keywords ROLLBACK TRANSSACTION should be placed immediately before END CATCH."
  - content: "What does XACT_STATE test for?"
    choices:
    - content: "An error in the transaction."
      isCorrect: true
      explanation: "That's correct. If an error occurs that causes the transaction to be classified an uncommittable, it will return -1."
    - content: "Whether or not the transaction has been committed."
      isCorrect: false
      explanation: "That's incorrect. XACT_STATE does not test whether a transaction has been committed."
    - content: "Whether or not the current transaction has finished."
      isCorrect: false
      explanation: "That's incorrect. XACT_STATE tests for open transactions and not whether a transaction has completed."