### YamlMime:ModuleUnit
uid: learn.github.merge-conflict-resolution.4-knowledge-check
title: Knowledge check
metadata:
  title: Knowledge check
  description: Check what you've learned.
  ms.date: 06/12/2020
  author: tpetchel
  ms.author: thpetche
  ms.topic: interactive-tutorial
  ms.prod: learning-azure
durationInMinutes: 3
content: |
  [!include[](includes/4-knowledge-check.md)]
quiz:
  title: Check your knowledge
  questions:
  - content: "Which of the following statements about automatic merges is **false**?"
    choices:
    - content: "They happen when the base branch file being changed has not been added or changed since the compare branch was last rebased."
      isCorrect: false
      explanation: "These edits can be automatically merged."
    - content: "They happen when the changed lines in a file have not been changed since the compare branch was last rebased, even if other lines were changed."
      isCorrect: false
      explanation: "These edits can be automatically merged."
    - content: "When they happen, it ensures that your changes did not break the build."
      isCorrect: true
      explanation: "This statement is incorrect. It's possible that the combination of your automatically merged changes, when combined with recent base branch changes, could produce a codebase that does not build. It's a best practice to rebase and test immediately before merging."
  - content: "Why are merge conflicts bad?"
    choices:
    - content: "The base branch becomes unstable until the conflicts are resolved. This means any builds probably won't succeed."
      isCorrect: false
      explanation: "When a merge conflict happens, the merge is rejected and the base branch is unchanged. The branch developer will then merge the differences in their branch before retrying the upstream merge."
    - content: "This is a trick question. Merge conflicts are not bad; they're an inevitable part of distributed version control."
      isCorrect: true
      explanation: "As projects scale, the probablity of multiple people changing the same files grows. Merge conflicts are raised to avoid code being unintentionally overwritten."
    - content: "Merge conflicts are embarrassing for the offending developer because everyone will think they were careless."
      isCorrect: false
      explanation: "Every developer has encountered merge conflicts at some point because there are many ways they can happen. For example, the base branch may change after you create your pull request."
  - content: "What is the best way to avoid most complex merge conflicts?"
    choices:
    - content: "Regularly rebase the base branch onto your branch."
      isCorrect: true
      explanation: "You may need to resolve conflicts each time, but they should be smaller and more straightforward."
    - content: "Only rebase the base branch onto your branch immediately before creating a pull request."
      isCorrect: false
      explanation: "While it is a good practice to rebase immediately prior to creating a pull request, you still run the risk of that single, final rebase producing challenging merge conflicts."
    - content: "Open a pull request as soon as you create your branch. This will help everyone else understand your proposed changes so they don't merge any competing code before you do."
      isCorrect: false
      explanation: "This might be a tough sell to the rest of the team. Let's consider this plan B for now."