### YamlMime:ModuleUnit
uid: learn.advocates.responsible-bots-introduction.5-knowledge-check
title: Knowledge check
metadata:
  title: Knowledge check
  description: Review what you've learned in the course about responsible bots.
  ms.date: 12/03/2021
  author: JKirsch1
  ms.author: chnoring
  ms.topic: interactive-tutorial
  ms.prod: learning-advocates
  ms.custom: team=nextgen
durationInMinutes: 5
quiz:
  questions: 
  - content: "How can we make sure users with visual impairment can use our bots?"
    choices:
    - content: "Use special braille devices for communication."
      isCorrect: false
      explanation: "Incorrect. Supporting braille devices can help. Some users might not have the device. There's a better way to provide support for more users."
    - content: "Use text to speech and speech to text to create a voice interface for the bot."
      isCorrect: true
      explanation: "Correct! Bot Framework supports passing voice messages over chat channels via SSML markup or attachments."
    - content: "Users with visual impairment can't use conversational UIs."
      isCorrect: false
      explanation: "Incorrect. There are methods for making conversational UIs inclusive for everyone."

  - content: "How do you make a bot understand natural language?"
    choices:
    - content: "Provide a list of all possible phrases and then check if the user's input corresponds to any phrase on the list."
      isCorrect: false
      explanation: "Incorrect. It's not possible to provide a comprehensive list of all phrases. You do need to provide a set of phrases, but they don't have to match the user's input text exactly."
    - content: "Provide a list of some phrases for each possible intent, and use an AI model to match the user's input to one of the intents."
      isCorrect: true
      explanation: "Correct! This process is automatically handled by Azure AI services like LUIS."
    - content: "Program different regular expressions to match the phrase to the best intent."
      isCorrect: false
      explanation: "Incorrect. An attempt to match all phrases by providing individual regular expressions would be a complex task. Even so, the results would likely be poor."
      
  - content: "You decide to use Azure AI QnA Maker to implement chit-chat functionality in your bot. You'd like your bot to support different conversation styles like formal and colloquial. And you want the bot to switch between the styles according to the user's age. How do you achieve this functionality?"
    choices:
    - content: "QnA Maker automatically supports different communication styles. You can select any one of them at runtime."
      isCorrect: false
      explanation: "Incorrect. When you create a QnA Maker model, you choose the communication styles that you support. At runtime, the bot can switch between the styles that you specify when you create the model."
    - content: "The best way is to add chit-chat functionality to your knowledge base."
      isCorrect: true
      explanation: "Correct. The QnA Maker service supports different chit-chat personalities for your knowledge base. When you create the QnA Maker model, you choose the communication styles that you support. The bot can then switch between these styles at runtime."
    - content: "You can create different QnA Maker models for each personality."
      isCorrect: false
      explanation: "Incorrect. While you can create different models, it's not the easiest option. The best approach is to choose multiple communication styles when you create the QnA Maker model. Then, the bot can switch between these styles at runtime."

  - content: "You've nearly finished developing and testing a bot. It collects basic information from users who are interested in a new service from your company. The bot's welcome message explains its basic usage. The bot can also hand off to a human operator when it doesn't understand user input. But you haven't worked on the bot's help feature. You'd like to launch the bot right away. What do you do?"
    choices:
    - content: "Delay the launch by a few days until the help feature is complete."
      isCorrect: false
      explanation: "Incorrect. Help features make bots responsible by making them easy to use. But time is limited in this case. And alternatives exist to the standard help feature. Those alternatives also make the bot responsible by providing useful information."
    - content: "Delay the launch by one day. During that time, add a basic help feature that provides examples of all types of questions that the bot can answer."
      isCorrect: false
      explanation: "Incorrect. Help features make bots responsible by making them easy to use. But time is limited in this case. And alternatives exist to the idea of listing all possible types of questions. Those alternatives also make the bot responsible by providing useful information."
    - content: "Launch the bot now. Over the next few days, develop a help feature that you can add to the deployed bot."
      isCorrect: true
      explanation: "Correct. Given the tight schedule, it's best not to implement the full help feature right now. The basic information on usage that your bot provides makes it responsible, as does its hand-off feature. You can work on making your bot more responsible after the launch."
  
  - content: "Sometimes a user can get frustrated with a bot. A common scenario is when a user isn't sure how to phrase a question. How can you design your bot to communicate effectively with users?"
    choices:
    - content: "Handle communication with the user through a menu with predefined choices."
      isCorrect: false
      explanation: "Incorrect. This design practice is a good idea, but it's not the only option."
    - content: "Provide a help command to show the possible phrases for the user to input."
      isCorrect: false
      explanation: "Incorrect. This design practice is a good idea, but it's not the only option."
    - content: "Provide a meaningful welcome message to explain to the user what phrases are accepted as input."
      isCorrect: false
      explanation: "Incorrect. This design practice isn't the easiest approach or the best way."
    - content: "All of the above."
      isCorrect: true
      explanation: "Correct! The best way to build a more responsible UI is to implement a combination of design practices that work together to create a positive user experience."
