### YamlMime:ModuleUnit
uid: learn.advocates.data-wrangling-shell.7-knowledge-check
metadata:
  title: Knowledge check
  description: Test your knowledge.
  ms.date: 12/09/2020
  author: trallard
  ms.author: shanama # Leave this as shanama unless you want content bugs assigned directly to you
  ms.topic: interactive-tutorial
  ms.prod: learning-azure
title: knowledge check
durationInMinutes: 1
content: |
  Choose the best response for each question. Then select **Check your answers**.
quiz:
  title: Check your knowledge
  questions:
    - content: "In our current directory, we want to find the three files, which have the least number of lines. Which command listed below would work?"
      choices:
        - content: "wc -l * > sort -n > head -n 3"
          isCorrect: false
          explanation: "The operator > is used to redirect output to files"
        - content: "wc -l * | sort -n | head -n 1-3"
          isCorrect: false
          explanation: "The correct syntax for the head command is -n 3"
        - content: "wc -l * | sort -n | head -n 3"
          isCorrect: true
          explanation: "This command will count the lines in a file, sort the output in ascending order (numerical) and display the first three lines"
        - content: "wc -l * | head -n 3 | sort -n"
          isCorrect: false
          explanation: "This command will count the lines in a file, select the first three lines and finally, sort the output in ascending order (numerical),"
    - content: "What will the regular expression `Fr[ea]nc[eh]` match?"
      choices:
        - content: "French, France, Frence, Franch"
          isCorrect: true
          explanation: "The way this regular expression is constructed, it will match misspellings such as Franch and Frence."
        - content: "Frenche, Franceh, Frenceh, Franche"
          isCorrect: false
          explanation: "The way this regular expression is constructed, it will match only one of the characters in each list at a time."
        - content: "France, French"
          isCorrect: false
          explanation: "The way this regular expression is constructed, it will match misspellings such as Franch and Frence."
        - content: "Freanceh, Fraenche"
          isCorrect: false
          explanation: "The way this regular expression is constructed, it will match only one of the characters in each list at a time."
    - content: "The -v option to grep inverts pattern matching, so that only lines that don't match the pattern are printed. Given that, which of the following commands will find all files in /data whose names end in s.txt but whose names also don't contain the string net? (For example, shuttles.txt or software.txt but not planets.txt.)."
      choices:
        - content: "find data -name *s.txt | grep -v net"
          isCorrect: false
          explanation: "The shell expands *s.txt instead of passing the wildcard expression to find"
        - content: "grep -v 'net' $(find data -name '*s.txt')"
          isCorrect: false
          explanation: "This command searches the contents of the files for lines that don't match ‘net’, rather than searching the file names"
        - content: "find data -name '*s.txt' | grep -v net"
          isCorrect: true
          explanation: "Putting the match expression in quotes prevents the shell expanding it, so it gets passed to the find command."
        - content: "None of the above"
          isCorrect: false
          explanation: "The correct answer is `find data -name '*s.txt' | grep -v net`"
    - content: "Suppose you want to delete some processed data files, and only keep your raw files and processing script to save storage. The raw files end in .dat and the processed files end in .txt. Which of the following would remove all the processed data files, and only the processed data files?"
      choices:
        - content: "rm ?.txt"
          isCorrect: false
          explanation: "This expression would remove .txt files with one-character names"
        - content: "rm *.txt"
          isCorrect: true
          explanation: "This expression would remove all the files ending with a .txt extension"
        - content: "rm * .txt"
          isCorrect: false
          explanation: "The shell would expand * to match everything in the current directory, so the command would try to remove all matched files and an additional file called .txt"
        - content: "rm *.*"
          isCorrect: false
          explanation: "The shell would expand *.* to match all files with any extension, so this command would delete all files"