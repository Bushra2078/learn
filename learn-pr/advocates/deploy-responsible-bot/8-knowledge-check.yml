### YamlMime:ModuleUnit
uid: learn.advocates.deploy-responsible-bot.8-knowledge-check
title: Knowledge check
metadata:
  title: Knowledge check
  description: "Review what you've learned in the course about responsible bots. Topics include applying principles of conversational AI, editing bots, and deploying bots."
  ms.date: 12/03/2021
  author: JKirsch1
  ms.author: chnoring
  ms.manager: markl
  ms.topic: interactive-tutorial
  ms.prod: learning-advocates
  ms.custom: team=nextgen
durationInMinutes: 3
quiz:
  questions:
  - content: "Why should developers understand the principles of responsible conversational AI?"
    choices:
    - content: "Because developers are ultimately responsible for their deployed bots."
      isCorrect: true
      explanation: "Correct. Developers should take responsibility for their code."
    - content: "To make more diverse bots."
      isCorrect: false
      explanation: "Incorrect. Support for diversity is only one aspect of responsible AI."
    - content: "To design better conversation flow."
      isCorrect: false
      explanation: "Incorrect. Good conversation flow design is only one aspect of responsible AI."

  - content: "What tool can you use to deploy a bot?"
    choices:
    - content: "Test in Web Chat, by selecting that function from your bot's **Overview** page in the Azure portal."
      isCorrect: false
      explanation: "Incorrect. You can use the Web Chat component to test a bot. This web-based client provides a way for you to talk with a bot from within a web page."
    - content: "The Azure CLI."
      isCorrect: true
      explanation: "Correct. After you create a bot resource and an application service, you can run Azure CLI commands to deploy a bot."
    - content: "Bot Framework Emulator."
      isCorrect: false
      explanation: "Incorrect. You can use Bot Framework Emulator to test and debug bots. This desktop application provides a way for you to chat with a bot and inspect the messages that the bot sends and receives."

  - content: "What should a bot do if it doesn't understand a problem or can't solve an issue?"
    choices:
    - content: "Apologize to the user."
      isCorrect: false
      explanation: "Incorrect. While giving an apology might be a good idea, the bot should also try to help the user solve their problem."
    - content: "Try to talk the user away from the problem."
      isCorrect: false
      explanation: "Incorrect. This tactic is definitely not a good idea. It can degrade a user's trust in the bot."
    - content: "Transition the conversation to a human."
      isCorrect: true
      explanation: "Correct. Bots that handle the beginning of a conversation, and then hand off to a human, can reduce the workload of human operators. Bots that are designed in this manner can still offer high-quality support to the user."

  - content: "Suppose you want your bot to help users find a hotel that offers the amenities of their choice. Examples include a fitness center, a warm breakfast, and a room refrigerator. How would you design the user input?"
    choices:
    - content: "Users can type in the amenities that they'd like the room to offer."
      isCorrect: false
      explanation: "Incorrect. This approach isn't recommended. It can be difficult to enter a large amount of text, especially on a phone."
    - content: "Users can select their preferences in an online form."
      isCorrect: true
      explanation: "Correct. Bot Framework supports form filling. You can use Bot Framework resources to program your bot to display a form."
    - content: "If users know of a hotel that meets their criteria, they can upload the URL of its website to the bot."
      isCorrect: false
      explanation: "Incorrect. This approach isn't recommended. The bot can accept a URL as input, but the overall user experience for this design could be frustrating."
