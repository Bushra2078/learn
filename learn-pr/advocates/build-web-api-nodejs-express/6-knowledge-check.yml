### YamlMime:ModuleUnit
uid: learn.azure.build-web-api-nodejs-express.8-knowledge-check
title: Knowledge check
metadata:
  title: Knowledge check
  description: Four multiple-choice questions
  ms.date: 05/31/2022
  author: softchris
  ms.author: chnoring
  ms.topic: interactive-tutorial
  ms.prod: learning-azure
  ms.custom: team=nextgen
durationInMinutes: 2
content: Choose the best response for each question. Then select **Check your answers**.
quiz:
  title: Check your knowledge
  questions:
    - content: "What steps must you go through to construct a web application with Express?"
      choices:
        - content: "Instantiate an app, configure routes, set up middleware, set up error handlers, listen to the server"
          isCorrect: false
          explanation: "Incorrect. These steps are definitely steps you could take to set up your app. However, only instantiation and listen to the server are steps you must do. Everything else is optional."
        - content: "Instantiate an app, listen to the server"
          isCorrect: true
          explanation: "Correct. These steps are all you need to get an app up and running. We strongly recommend that you configure some routes, however."
        - content: "Instantiate an app, configure routes, listen to the server"
          isCorrect: false
          explanation: "Incorrect. You don't actually need to configure routes, although we highly recommend it."
        - content: "Instantiate an app, configure routes, set up middleware, listen to the server"
          isCorrect: false
          explanation: "Incorrect. Neither configuring routes or setting up middleware are things you must do, even though we highly recommend them."
    - content: "What's the preferred way to send a JSON response from an Express app?"
      choices:
        - content: "Call the `json()` helper method on the response object, `res.json({ content: '' })`"
          isCorrect: true
          explanation: "Correct. There are many ways to send a response as JSON, but this way is the most common and simplest to use."
        - content: "Call `res.send({ content: '' })`"
          isCorrect: false
          explanation: "Incorrect. This call sends the response as text."
        - content: "Call `res.send(JSON.stringify({ content: '' }))`"
          isCorrect: false
          explanation: "Incorrect. This call does technically send the response as JSON, but it's simpler and easier to use the `res.json()` helper method."
        - content: "Use any of these ways: `res.type('json')`, `res.type('application/json')`, `res.contentType('application/json')`, `res.format({ 'application/json': function() { res.send({}) } })`"
          isCorrect: false
          explanation: "Incorrect. These method calls are valid ways of sending something as JSON, but they're considered more advanced. The `res.json()` helper method is by far the easiest way."
    - content: "How would you set up Express to handle a post request with JSON data?"
      choices:
        - content: "Call `app.use(bodyParser.json())` at the top, register a route by using the post method as in `app.post(<route`, () =>{}), read from req.body`"
          isCorrect: true
          explanation: "Correct. This call configures the `bodyParser` to interpret the incoming data as JSON."
        - content: "Register a route by using the post method as in `app.post(<route>, () =>{}), read from req.body`"
          isCorrect: false
          explanation: "Incorrect. You need to configure a body paring middleware or the posted data won't be available on `req.body`."
        - content: "Configure body parsing middleware, register a route by using the post method as in `app.post(<route>, () =>{}), read from req.data`"
          isCorrect: false
          explanation: "Incorrect. The posted data is available on `req.body`, not `req.data`."
        - content: "Call `app.use(bodyParser.urlencoded({ extended: false }))` at the top, register a route by using the post method as in `app.post(<route>, () =>{}), read from req.body`"
          isCorrect: false
          explanation: "Incorrect. The configuration at the top is wrong. It instructs Express to receive posted data from a form that's URL encoded. The correct configuration is `app.use(bodyParser.json())`."
  
