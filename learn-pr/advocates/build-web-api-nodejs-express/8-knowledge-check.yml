### YamlMime:ModuleUnit
uid: learn.azure.build-web-api-nodejs-express.8-knowledge-check
title: Knowledge check
metadata:
  title: Knowledge check
  description: Four multiple-choice questions
  ms.date: 06/16/2020
  author: softchris
  ms.author: chnoring
  ms.topic: interactive-tutorial
  ms.prod: learning-azure
durationInMinutes: 2
content: |
  [!include[](includes/8-knowledge-check.md)]
quiz:
  title: Check your knowledge
  questions:
    - content: "What steps must you go through in constructing a Web application with Express?"
      choices:
        - content: "Instantiate an app, configure routes, set up middleware, set up error handlers, listen to the server"
          isCorrect: false
          explanation: "These are definitely steps you could take in setting up your app. However, only instantiation and listen to the server are steps you must do, everything else is optional"
        - content: "Instantiate an app, listen to the server"
          isCorrect: true
          explanation: "This is all you need to get an app up and running. You are strongly recommended to configure some routes however"
        - content: "Instantiate an app, configure routes, listen to the server"
          isCorrect: false
          explanation: "You don't actually need to configure routes although it's highly recommended"
        - content: "Instantiate an app, configure routes, set up middleware, listen to the server"
          isCorrect: false
          explanation: "Neither configuring routes or set up middleware are things you must do, even though it's highly recommended"
    - content: "What is the preferred way to send a JSON response from an Express app?"
      choices:
        - content: "Call the json() helper method on the response object like so: res.json({ content: '' })"
          isCorrect: true
          explanation: "There are many ways to send a response as JSON but this is the most common and simplest to use"
        - content: "Call res.send({ content: '' })"
          isCorrect: false
          explanation: "This will send the response as text"
        - content: "Call res.send(JSON.stringify({ content: '' }))"
          isCorrect: false
          explanation: "This will technically send it as JSON but it's simpler and easier to use res.json() helper method."
        - content: "Use any of these ways: res.type('json'), res.type('application/json'), res.contentType('application/json'), res.format({ 'application/json': function() { res.send({}) } })"
          isCorrect: false
          explanation: "These are valid ways of sending something as JSON but is considered more advanced. The res.json() helper method is by far the easiest way."
    - content: "How would set up Express to handle a POST request with JSON data?"
      choices:
        - content: "Call app.use(bodyParser.json()) at the top, register a route using the post method, like so app.post(<route>, () =>{}), read from req.body"
          isCorrect: true
        - content: "Register a route using the post method, like so app.post(<route>, () =>{}), read from req.body"
          isCorrect: false
          explanation: "You need to configure a body pasting middleware or the posted data won't be available on req.body"
        - content: "Configure body parsing middleware, register a route using the post method, like so app.post(<route>, () =>{}), read from req.data"
          isCorrect: false
          explanation: "the posted data is available on req.body NOT req.data"
        - content: "Call app.use(bodyParser.urlencoded({ extended: false })) at the top, register a route using the post method, like so app.post(<route>, () =>{}), read from req.body"
          isCorrect: false
          explanation: "The configuration at the top is wrong. That will configure it to receive posted data from a Form that is URL encoded. It needs to be app.use(bodyParser.json())."
  
