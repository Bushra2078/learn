### YamlMime:ModuleUnit
uid: learn.iot.threadx-event-notification.knowledge-check
title: Knowledge check
metadata:
  title: Knowledge check
  description: Interactive questions that validate whether the learner achieved the learning objectives.
  ms.date: 04/19/2022
  author: timlt
  ms.author: timlt
  manager: lizross
  ms.topic: interactive-tutorial
  ms.service: rtos
durationInMinutes: 8
content: |
quiz:
  questions:
    - content: 'Which of the following ThreadX services should be used to obtain an instance from a semaphore?'
      choices:
        - content: 'tx_semaphore_put(&my_semaphore, TX_NO_WAIT)'
          isCorrect: false
          explanation: 'Incorrect. A get operation must be used.'
        - content: 'tx_mutex_get(&my_semaphore, TX_NO_WAIT)'
          isCorrect: false
          explanation: 'Incorrect. A counting semaphore must be used.'
        - content: 'tx_semaphore_get(&my_semaphore, TX_WAIT_FOREVER)'
          isCorrect: true
          explanation: 'Correct.'
        - content: 'All of the above are correct'
          isCorrect: false
          explanation: 'Incorrect. A semaphore get operation must be used.'
    - content: 'Which of the following ThreadX resources embodies the property of ownership?'
      choices:
        - content: 'Mutex'
          isCorrect: true
          explanation: 'Correct.'
        - content: 'Counting semaphore'
          isCorrect: false
          explanation: 'Incorrect. Only a mutex has the concept of ownership.'
        - content: 'Application timer'
          isCorrect: false
          explanation: 'Incorrect. Only a mutex has the concept of ownership.'
        - content: 'None of the above'
          isCorrect: false
          explanation: 'Incorrect. Only a mutex has the concept of ownership.'
    - content: 'Which of the following ThreadX resources has the property of priority inheritance?'
      choices:
        - content: 'Counting semaphore'
          isCorrect: false
          explanation: 'Incorrect. Only a mutex has the concept of priority inheritance.'
        - content: 'Mutex'
          isCorrect: true
          explanation: 'Correct.'
        - content: 'Application timer'
          isCorrect: false
          explanation: 'Incorrect. Only a mutex has the concept of priority inheritance.'
        - content: 'None of the above'
          isCorrect: false
          explanation: 'Incorrect. Only a mutex has the concept of priority inheritance.'
    - content: 'Which of the following ThreadX service calls cannot cause suspension?'
      choices:
        - content: 'tx_mutex_get(&my_mutex, WAIT_FOREVER)'
          isCorrect: false
          explanation: 'Incorrect. A semaphore get operation with TX_NO_WAIT will never cause suspension.'
        - content: 'tx_mutex_get(&my_mutex, 1)'
          isCorrect: false
          explanation: 'Incorrect. A semaphore get operation with TX_NO_WAIT will never cause suspension.'
        - content: 'tx_semaphore_get(&my_semaphore, TX_NO_WAIT)'
          isCorrect: true
          explanation: 'Correct.'
        - content: 'tx_semaphore_get(&my_semaphore, 5)'
          isCorrect: false
          explanation: 'Incorrect. A semaphore get operation with TX_NO_WAIT will never cause suspension.'
    - content: 'Which of the following ThreadX service calls could result in thread suspension?'
      choices:
        - content: 'tx_semaphore_put(&my_semaphore, TX_WAIT_FOREVER)'
          isCorrect: false
          explanation: 'Incorrect. This is an invalid semaphore put service call.'
        - content: 'tx_semaphore_get(&my_semaphore, TX_NO_WAIT)'
          isCorrect: false
          explanation: 'Incorrect. The TX_NO_WAIT option means that suspension cannot occur.'
        - content: 'tx_semaphore_get(&my_semaphore, 5)'
          isCorrect: true
          explanation: 'Correct.'
        - content: 'All of the above are correct'
          isCorrect: false
          explanation: 'Incorrect. Only one of the options is correct.'
