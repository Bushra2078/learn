### YamlMime:ModuleUnit
uid: learn.iot.build-azure-digital-twins-graph-for-chocolate-factory.summary
metadata:
  description: Summary
  ms.date: 10/1/2020
  author: PeterTurcan
  ms.author: rabayoum
  ms.topic: interactive-tutorial
  ms.prod: learning-azure
title: Summary
durationInMinutes: 8
content: |
  [!include[](includes/10-summary.md)]
quiz:
  title: Check your knowledge
  questions:

  - content: 'True or false. Chocolate production is not a realistic use for IoT, or digital twins?'
    choices: 
    - content: 'False'
      isCorrect: true
      explanation: Chocolate manufacturers are already customers of cloud services, IoT, and digital twins.
    - content: 'True'
      isCorrect: false
      explanation: Chocolate manufacturers are already customers of cloud services, IoT, and digital twins.

  - content: 'What are the fields of a Digital Twins Definition Language (DTDL) interface?'
    choices: 
    - content: '@type, name, schema'
      isCorrect: false
      explanation: Good guess, but these are the attributes of the contents entry in a model.
    - content: 'Property, Telemetry, Component, Relationship'
      isCorrect: true
      explanation: Properties are stored data, Telemetry are measurements, Components aid in organization, Relationships include contains, heats, cools, isBilledTo, and so on.
    - content: '@id, @type, @context, displayName, contents'
      isCorrect: false
      explanation: Good guess, but these are the fields of a model, not the interface.
    - content: 'primitive types, and Object, Map, Enum'
      isCorrect: false
      explanation: These are the schema values for model Property, or Telemetry.

  - content: 'What is the difference between a DTDL property, and DTDL telemetry?'
    choices: 
    - content: 'There is no significant difference.'
      isCorrect: false
      explanation: Properties and Telemetry are not interchangeable.
    - content: 'Properties are expected to have storage, that can be written to if necessary. Telemetry is a stream of values.'
      isCorrect: true
      explanation: Typically telemetry is sent by a sensor (temperature, humidity, pressure). Properties might include ID, or date of last maintenance.
    - content: 'Properties do not change, Telemetry changes continuously.'
      isCorrect: false
      explanation: Telemetry might not change, and properties can be set as writable, and written to.
    - content: 'Telemetry is for IoT devices, Properties are for digital twins.'
      isCorrect: false
      explanation: IoT devices do send telemetry, and properties are an important component of digital twin models. But digital twin models can have telemetry components.

  - content: 'True or false. DTDL includes the concept of Commands, but they are not supported by Azure Digital Twins?'
    choices: 
    - content: 'False'
      isCorrect: false
      explanation: The DTDL spec does define Commands.
    - content: 'True'
      isCorrect: true
      explanation: DTDL Commands might include the ability to turn a fan on or off. However, Commands are currently unsupported.

  - content: 'You have a set of models, some of which contain a property called Temperature. Which of the following queries return all models with a temperature less than 65 degrees?'
    choices: 
    - content: 'SELECT * FROM DigitalTwins WHERE Temperature < 65'
      isCorrect: false
      explanation: Close, but not quite the right syntax.
    - content: 'SELECT * FROM DigitalTwins T WHERE T.Temp < 65'
      isCorrect: false
      explanation: Close, but Temp is not the correct name of the property.
    - content: 'SELECT * FROM DigitalTwins T WHERE T.Temperature < 65'
      isCorrect: true
      explanation: The >, <, = and != are acceptable comparisons in a query.
    - content: 'SELECT * FROM DigitalTwins WHERE IS_DEFINED(Temperature)'
      isCorrect: false
      explanation: This query would return all models with a Temperature property.
    - content: 'if (Temperature < 65) return model.name;'
      isCorrect: false
      explanation: This answer does not have the right syntax.

  - content: "Which of the following query functions is not a scalar function?"
    choices: 
    - content: 'IS_DEFINED'
      isCorrect: false
      explanation: This function is a scalar function, returning a Boolean indicating if the property has been assigned a value.
    - content: 'IS_OF_MODEL'
      isCorrect: false
      explanation: This function is a scalar function, returning a Boolean value indicating if the specified twin matches the specified model type.
    - content: 'ENDSWITH'
      isCorrect: false
      explanation: This function is a scalar function, returning a Boolean value indicating whether the first string expression ends with the second.
    - content: 'JOIN'
      isCorrect: true
      explanation: JOIN is different from the general SQL JOIN, as relationships cannot be queried independently, and must be tied to a twin. To incorporate this difference, the keyword RELATED is used in the JOIN clause to reference a set of relationships.

  - content: 'Which of the following are best practices for designing twin graph queries?'
    choices: 
    - content: 'A. Consider the query pattern during the model design phase. Try to make sure relationships that need to be answered in a single query are modeled as a single-level relationship.'
      isCorrect: false
      explanation: This approach is good practice, but there are other good practices in this list.
    - content: 'B. Design properties in a way that will avoid large result sets from graph traversal.'
      isCorrect: false
      explanation: This approach is good practice, but there are other good practices in this list.
    - content: 'C. You can significantly reduce the number of queries you need by building an array of twins and querying with the IN operator.'
      isCorrect: false
      explanation: This approach is good practice, but there are other good practices in this list.
    - content: 'D. Property names and values are case-sensitive, so take care to use the exact names defined in the models. If property names are misspelled or incorrectly cased, the result set is empty with no errors returned.'
      isCorrect: false
      explanation: This approach is good practice, but there are other good practices in this list.
    - content: 'E. Property names and values are not case-sensitive, so you do not need to use the exact case of the names defined in the models.'
      isCorrect: false
      explanation: Property names are case-sensitive.
    - content: 'All of the above.'
      isCorrect: false
      explanation: Not all the list above is good advice.
    - content: 'A through D of the above.'
      isCorrect: true
      explanation: Property names are case-sensitive. Perhaps come up with a standard for naming properties, such as all lower-case, or all camel-caps.
    - content: 'None of the above.'
      isCorrect: false
      explanation: There are good practices to be found here.