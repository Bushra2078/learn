### YamlMime:ModuleUnit
uid: learn.wwl.challenge-project-classes-methods-properties.knowledge-check
title: Knowledge check
metadata:
  title: Knowledge check
  description: "Knowledge check"
  ms.date: 11/24/2023
  author: wwlpublish
  ms.author: gregorfisher
  ms.topic: unit
durationInMinutes: 3
quiz:
  title: "Check your knowledge"
  questions:
  - content: "Which answer best describes how properties are used?"
    choices:
    - content: "Properties are used to determine ownership of a class"
      isCorrect: false
      explanation: "Incorrect. Properties are not used to determine ownership of a class"
    - content: "Properties are used to set the value of inheritance"
      isCorrect: false
      explanation: "Incorrect. This answer does not make sense as properties have nothing to do with inheritance directly"
    - content: "Properties are used to `get` and `set` values in an object"
      isCorrect: true
      explanation: "Correct. Properties are used to get and set variable values in an object"
  - content: "How are properties and methods different?"
    choices:
    - content: "Methods and properties are basically the same"
      isCorrect: false
      explanation: "Incorrect. Although they can do some of the same things, properties are more limited in their functionality"
    - content: "Properties can get and set values in an object where methods can only set values"
      isCorrect: false
      explanation: "Incorrect. Methods can do more than properties. They can get and set values, as well as do many more things in an object"
    - content: "Using a method causes something to happen to an object, while using a property either sets or returns information in an object."
      isCorrect: true
      explanation: "Correct. The essential difference is that a method is more powerful and can do more than set and/or retrieve values"
  - content: "What is wrong with this instantiation of a class? `Car car1 = new Car(string \"Toyota\", string \"Camry\", int 2018, double 20000.00);`"
    choices:
    - content: "Nothing, it's correct"
      isCorrect: false
      explanation: "Incorrect. When passing values into a constructor you don't define the type being passed in (string, int double, etc.)"
    - content: "You don't need to begin the line with `Car` as the type"
      isCorrect: false
      explanation: "Incorrect. You do need to begin your instantiation of the object with the type you are creating"
    - content: "You don't need to specify the type for each parameter you're passing in"
      isCorrect: true
      explanation: "Correct. When passing values into a constructor you don't define the type being passed in (string, int double, etc.)"