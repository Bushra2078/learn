### YamlMime:ModuleUnit
uid: learn.languages.python-if-elif-else.knowledge-check
title: Knowledge check
metadata:
  title: Check your knowledge
  description: Review what you've learned.
  ms.date: 02/18/2020
  author: bobtabor-msft
  ms.author: rotabor
  ms.topic: interactive-tutorial
  ms.prod: learning-languages
durationInMinutes: 3
quiz:
  title: Check your knowledge
  questions:
  - content: "What's wrong with the line of code `if x == 3`?"
    choices:
    - content: "It uses `==` instead of `=` to check for equality."
      isCorrect: false
      explanation: "The equality operator is two equal sign characters."
    - content: "It's missing the keyword `then` at the end."
      isCorrect: false
      explanation: "There's no `then` keyword in Python."
    - content: "It's missing parentheses around the Boolean expression."
      isCorrect: false
      explanation: "Parentheses aren't required when you use the Python if statement."
    - content: "It's missing `:` at the end."
      isCorrect: true
      explanation: "Valid if statements must terminate with a colon character."
  - content: "What's the result of the following Boolean expression when `x = 6`: `x > 3 or x < 5`?"
    choices:
    - content: "`True`"
      isCorrect: true
      explanation: "Since 6 is greater than 3, that part of the entire Boolean expression is `True`. Therefore, the entire Boolean expression is `True` since an `or` was used."
    - content: "`False`"
      isCorrect: false
      explanation: ""
    - content: "The syntax is incorrect for a Boolean expression."
      isCorrect: false
      explanation: "The Boolean expression syntax in this code example is correct."
  - content: "What's the result of the following Boolean expression when `x = 6`: `not x`?"
    choices:
    - content: "True"
      isCorrect: false
      explanation: "The Boolean expression doesn't evaluate to `True`."
    - content: "False"
      isCorrect: true
      explanation: "Since `bool(6)` evaluates to `True`, adding the `not` operator would evaluate to `False`."
    - content: "The syntax is incorrect for a Boolean expression."
      isCorrect: false
      explanation: "The Boolean expression syntax in this code example is correct."