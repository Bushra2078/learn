### YamlMime:ModuleUnit
uid: learn.visual-studio-test-concepts.6-knowledge-check
title: Knowledge check
metadata:
  unitType: knowledge_check
  title: Knowledge check
  description: Test your knowledge on the common types of tests including unit tests, integrations tests, and more!
  ms.date: 6/28/2021
  author: kendrahavens
  ms.author: kehavens
  ms.topic: interactive-tutorial
  ms.prod: learning-visual-studio
durationInMinutes: 1
content: |
  [!include[](includes/6-knowledge-check.md)]
quiz:
  questions:
  - content: "What is the most common type of test?"
    choices:
    - content: "Integration"
      isCorrect: false
      explanation: "Close! Integration tests are likely the second most common type of test as they are one step up from testing individual functions."
    - content: "UI"
      isCorrect: false
      explanation: "UI tests are often less common because they've historically been more expensive to maintain, run, and write."
    - content: "Unit"
      isCorrect: true
      explanation: "Unit tests are the most common type of tests in sheer number because they're the easiest to write and least expensive to run."
    - content: "Acceptance"
      isCorrect: false
      explanation: "Other types of tests often out-numbered Acceptance tests. Acceptance tests tend to cover a whole range of customer criteria that can be broken down by other tests."
  - content: "If I want to test how my app scales with multiple users using it, what type of test am I likely to write?"
    choices:
    - content: "Load"
      isCorrect: true
      explanation: "Load testing will help predict how your app does at scale when multiple customers are actually using it in the real world."
    - content: "Unit"
      isCorrect: false
      explanation: "Unit tests only test specific functionality of a singular method and may not provide and indicator of how the app would perform under a heavy usage."
    - content: "Integration"
      isCorrect: false
      explanation: "Integration tests can test how multiple parts of your code integrate together, but would not mimic multiple users using the app."
    - content: "Performance"
      isCorrect: false
      explanation: "Close! Performance testing is considered similar to this type of testing. It does focus on how responsive your functions are, but there's a more specific type of test that mimics multiple users putting your app under stress to find its limits."