### YamlMime:ModuleUnit
uid: learn.django.admin-site.knowledge-check
title: Knowledge check 
metadata:
  title: Knowledge check
  description: Check your knowledge.
  ms.date: 2/26/2021  
  author: GeekTrainer
  ms.author: shanama
  ms.topic: interactive-tutorial
  ms.prod: learning-azure
durationInMinutes: 3
###########################################################################
### Question content requirements:
###  - Write 5 questions
###  - Questions 1,2 must test this Learning Objective: "Describe how <attributes> of <product> work to <solve problem>"
###      Guidance: These two questions can be short, no need for a long scenario to analyze. Test if they understand how the product works.
###      Example: "What differentiates an action from a control action in an Azure Logic App?"
###  - Questions 3,4,5 must test this Learning Objective: "Evaluate whether <product> is appropriate to <general product use case>"
###      Guidance: Use scenario questions that ask the learner to analyze a situation with the "when to use" criteria presented in the module.
###      Example: "Suppose you work for a financial company. You're building a system to let your brokers trade financial instruments. Your system must monitor market conditions, detect changes, and execute trades. You'll need to handle a large volume of transactions and you'll need to do it quickly. The faster you can complete trades, the more of an advantage you'll have over your competitors. Which requirement of this system would be difficult for Logic Apps to satisfy?"
###
###########################################################################
content: |
quiz:
  questions:
  - content: 'What command was used to create our first admin user?'
    choices:
    - content: 'python manage.py createadmin'
      isCorrect: false
      explanation: 'This answer is not correct. This command was not used to create our first admin user.'
    - content: 'python manage.py createsuperuser'
      isCorrect: true
      explanation: 'This answer is correct. This command was used to create our first admin user.'
    - content: 'python manage.py createadminuser'
      isCorrect: false
      explanation: 'This answer is not correct. This command was not used to create our first admin user.'
  - content: 'What are the Django admin site permission levels set from?'
    choices:
    - content: 'number of users'
      isCorrect: false
      explanation: 'This answer is not correct. Django does not set permissions based off of the number of users.'
    - content: 'models'
      isCorrect: true
      explanation: 'This answer is correct. The Django admin feature sets permissions based off of app models.'
    - content: 'views'
      isCorrect: false
      explanation: 'This answer is not correct. Django does not set permissions based off of views.'
      