### YamlMime:Module
uid: learn.languages.rust-memory-management
metadata:
  title: Understand how Rust manages memory
  description: "Discover the features that make Rust so unique: ownership and borrowing."
  ms.date: 01/21/2021
  author: meaghanlewis
  ms.author: shanama
  ms.topic: interactive-tutorial
  ms.prod: learning-azure
title: Rust memory management - ownership, borrowing, and lifetimes
summary: "Discover the features that make Rust so unique: ownership and borrowing."
abstract:  |
  In this module, you'll learn:
  - What generic types are and how "wrapper" types use them.
  - What traits are and how they help us define shared behavior.
  - How to implement an existing trait for a custom type.
  - How to implement a custom trait for an existing type.
  - How trait bounds help us write generic functions.
prerequisites: | 
  - You should have a basic understanding of Rust's primitive and collection types, as covered in the previous modules.
iconUrl: /learn/achievements/generic-badge.svg # TODO change
levels:
- beginner
roles:
- developer
- student
products:
- vs-code
units:
- learn.languages.rust-memory-management.0-introduction
- learn.languages.rust-memory-management.1-what-is-ownership
- learn.languages.rust-memory-management.2-learn-about-borrow-checker
- learn.languages.rust-memory-management.3-validate-references-with-lifetimes
- learn.languages.rust-memory-management.4-exercise-lifetimes
- learn.languages.rust-memory-management.5-knowledge-check
- learn.languages.rust-memory-management.6-summary
badge:
  uid: learn.languages.rust-memory-management.badge
