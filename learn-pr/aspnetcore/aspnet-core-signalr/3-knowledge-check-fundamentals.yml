### YamlMime:ModuleUnit
uid: learn.aspnet-core-signalr.knowledge-check-fundamentals
title: SignalR fundamentals knowledge check
metadata:
  unitType: knowledge_check
  title: SignalR fundamentals knowledge check
  description: Assert your knowledge of ASP.NET Core SignalR fundamentals.
  ms.date: 9/15/2021
  author: IEvangelist
  ms.author: dapine
  ms.topic: interactive-tutorial
  ms.prod: learning-aspnetcore
durationInMinutes: 2
content: |
quiz:
  questions:
    - content: "Which built-in SignalR hub protocol should be used to reduce message sizes?"
      choices:
        - content: "MessagePack"
          isCorrect: true
          explanation: "The MessagePack hub protocol provides an alternative to the default JSON protocol, and produces smaller messages."
        - content: "JSON"
          isCorrect: false
          explanation: "The JSON hub protocol is the default protocol, and is human readable, however; is is uncompressed and has larger messages compared to its binary counterpart."
        - content: "BlazorPack"
          isCorrect: false
          explanation: "While BlazorPack is a binary protocol, it is only available with the Blazor server hosting model."
    - content: "A client can send and receive messages to and from the server with what SignalR type?"
      choices:
        - content: "HubContext"
          isCorrect: false
          explanation: "The `HubContext` type is a server concept to represent a specific `Hub`, outside the hub instance itself."
        - content: "HubConnection"
          isCorrect: true
          explanation: "The `HubConnection` is built from a `HubConnectionBuilder`, and its connection enables clients to send and receive messages."
        - content: "SynchronizationContext"
          isCorrect: false
          explanation: "The `SynchronizationContext` provides the basic functionality for propagating a synchronization context in various synchronization models, but is not related to SignalR."
    - content: "When the server supports WebSockets, but the connected client only supports Long Polling which transport is used?"
      choices:
        - content: "WebSockets"
          isCorrect: false
          explanation: "If the connected client doesn't support WebSockets, graceful fallback attempts Server-Sent Events then Long Polling."
        - content: "Server-Sent Events"
          isCorrect: false
          explanation: "If the connected client doesn't support WebSockets or Server-Sent Events, then only Long Polling is available."
        - content: "Long Polling"
          isCorrect: true
          explanation: "Long Polling is used since its the lowest common denominator of potential transports."
    - content: ""
      choices:
        - content: ""
          isCorrect: true
          explanation: ""
        - content: ""
          isCorrect: false
          explanation: ""
        - content: ""
          isCorrect: false
          explanation: ""
