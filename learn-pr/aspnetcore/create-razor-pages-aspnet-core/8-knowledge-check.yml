### YamlMime:ModuleUnit
uid: learn.create-razor-pages-aspnet-core.8-knowledge-check
metadata:
  title: Knowledge check
  description: Summary
  ms.date: 08/24/2021
  author: jongalloway
  ms.author: jogallow
  ms.topic: interactive-tutorial
  ms.prod: learning-aspnetcore
title: Knowledge check
durationInMinutes: 2
content: |
quiz:
  title: Check your knowledge
  questions:
    - content: "Which following statement is true for Razor Pages?"
      choices:
      - content: "Use Razor Pages for an ASP.NET Core app that isn't focused on generating HTML, such as a web API."
        isCorrect: false
        explanation: "Use Razor Pages in any ASP.NET Core web apps where you need a page-centric approach for defining UI logic using a combination of HTML, CSS, and C#."
      - content: "Razor Pages can't coexist in an ASP.NET Core MVC app."
        isCorrect: false
        explanation: "Razor Pages support are built into ASP.NET Core MVC and can coexist within an MVC app."
      - content: "A productivity advantage of Razor Pages is that it keeps together what tends to change together for views in your app."
        isCorrect: true
        explanation: "Use Razor Pages to keep ASP.NET Core pages organized in a simpler way. All view (page) specific logic and page properties (view model) can be kept in the same proximity."
    - content: "What statement best describes a `PageModel`?"
      choices:
      - content: "A `PageModel` encapsulates the logic operations scoped just to its Razor page."
        isCorrect: true
        explanation: "A `PageModel` encapsulates the data properties and logic operations scoped just to its Razor page. By convention, it's defined in a '.cshtml.cs' file using the same name and directory."
      - content: "A `PageModel` provides top-level view templates using Razor syntax."
        isCorrect: false
        explanation: "A Layout '.cshtml' file defines a top-level template for a view using Razor syntax."
      - content: "A `PageModel` is a partial Razor markup file used to break up large markup files into smaller components."
        isCorrect: false
        explanation: "A Partial view is a '.cshtml' Razor markup file that renders HTML output within another markup file's rendered output. Partial views are used to break up large markup files into smaller reusable components."
    - content: "Which statement best describes the `@page` directive?"
      choices:
      - content: "The `@page` directive indicates the page can handle HTTP requests and is what makes a page a Razor page."
        isCorrect: true
        explanation: "The `@page` directive is what makes a page a Razor page and it must be the first directive on the page. The `@page` directive indicates the page can handle HTTP requests."
      - content: "The `@page` directive is an example of a Tag Helper."
        isCorrect: false
        explanation: "Tag Helpers are components for automating HTML generation in Razor Pages. By design, they're reusable, customizable building blocks. Most built-in Tag Helpers in ASP.NET Core extend standard HTML elements you're familiar with and provide additional server-side attributes for the element."
      - content: "The `@page` directive is used to specify and enforce model property behavior."
        isCorrect: false
        explanation: "Data annotations are used to enforce behaviors on the model properties to which they're applied. They're simple attributes that can be applied to properties in your model class file."
