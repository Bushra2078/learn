### YamlMime:ModuleUnit
uid: learn.microservices-aspnet-core.8-knowledge-check
metadata:
  title: Knowledge check
  description: Knowledge Check - Create and deploy a cloud-native ASP.NET Core microservice
  ms.date: 05/15/2020
  author: camsoper
  ms.author: casoper
  ms.topic: interactive-tutorial
  ms.prod: learning-aspnetcore
title: Knowledge check
durationInMinutes: 5
content: |
quiz:
  title: Check your knowledge
  questions:
    - content: "In a microservices architecture, how do individual microservices access their data?"
      choices:
      - content: "Data is stored in a master data store with which all microservices interact."
        isCorrect: false
        explanation: "The shared data store does not provide autonomy. Performing data schema updates can cause runtime conflicts for services accessing the same resources."
      - content: "Each microservice is responsible for its own data. Each microservice implments it's own data store that is best optimized for its workload, storage needs, and read/write patterns. Inter-service communication is performed on an as-needed basis, either via synchronous API calls or asynchronously through messaging."
        isCorrect: true
        explanation: "The data isolation gives every microservice the autonomy to independently perform data schema updates without breaking any other service in the production environment."
    - content: "Within the ASP.NET Core Health Checks middleware, the code `services.AddHealthChecks().AddCheck("coupon-self", () => HealthCheckResult.Healthy());` in `Startup.ConfigureServices` serves what purpose?"
      choices:
      - content: "Configures Kubernetes liveness probe using HTTP GET"
        isCorrect: false
        explanation: "Kubernetes liveness probe using HTTP GET is configured in Kubernetes configuration yaml file."
      - content: "It registers a health check with a name `coupon-self` and an implementation that returns HTTP success code to the endpoint configured in `Startup.Configure`."
        isCorrect: true
        explanation: "For many apps, a basic health probe that reports the app's availability to process requests is sufficient. In the above code, the check always returns a healthy state."
      - content: "Maps an health endpoint called `<yourservice>/liveness`"
        isCorrect: false
        explanation: "To map health check endpoints in ASP .NET Core call `endpoints.MapHealthChecks("/liveness");` in the  `Startup.Configure` class."
    - content: "What is the benefit of using Azure Container Registry(ACR)?"
      choices:
      - content: "ACR allows public access to container images hence developers can access them easily without authentication."
        isCorrect: false
        explanation: "Azure Container Registry is a private registry. Images cannot be accessed without authentication."
      - content: "ACR is a private container registry and provides a granular access control for development teams."
        isCorrect: true
        explanation: "ACR provides Azure service principals as an authentication method. They provide granular access to container images in Azure Container Registry; for example, you can specify read-only access or full access to the container registry."