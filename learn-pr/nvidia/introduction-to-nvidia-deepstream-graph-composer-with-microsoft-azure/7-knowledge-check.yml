### YamlMime:ModuleUnit
uid: learn.nvidia.introduction-to-nvidia-deepstream-graph-composer-with-microsoft-azure.7-knowledge-check
title: Knowledge check
metadata:
  title: Knowledge check
  description: "Knowledge check"
  ms.date: 10/01/2021
  author: toolboc
  ms.author: pdecarlo
  ms.topic: interactive-tutorial
  ms.prod: learning-azure
azureSandbox: false
durationInMinutes: 5
content: |
  [!include[](includes/7-knowledge-check.md)]
quiz:
  title: Check your knowledge
  questions:
  - content: 'The DeepStream 6.0 Graph Composer is comprised of the following:'
    choices: 
    - content: 'An SDK that contains optimized libraries for GPU accelerated inference tasks '
      isCorrect: false
      explanation: This is a bit more descriptive of the DeepStream SDK itself, which is leveraged by the DeepStream 6.0 Graph Composer.
    - content: 'Tooling for drawing charts which display inference detections in DeepStream 6.0 apps'
      isCorrect: false
      explanation: This is not a feature of the DeepStream 6.0 Graph Composer.
    - content: 'A visual environment for developing IVA applications that leverage the NVIDIA DeepStream SDK, a registry tool that provides extensions and components for use in the visual environment ,and tooling for packaging NVIDIA DeepStream Graphs into containerized applications'
      isCorrect: true
      explanation: These are all features and functionalities that are provided by the DeepStream 6.0 Graph Composer.
  - content: 'When running an container application that requires access to the X11 environment for drawing a user interface, the following must be accounted for:'
    choices: 
    - content: 'Nothing, the container runtime will configure itself and just work'
      isCorrect: false
      explanation: If only it were that easy, unfortunately this will not simply work without additional configuration prior to running and at runtime.
    - content: 'Before running the workload in question, the host machine needs to enable access to the X11 environment which can be accomplished with `sudo xhost +`, and the container must mount in the system X11 socket at runtime'
      isCorrect: true
      explanation: These are the proper steps to enable access to the X11 environment from a container.
    - content: 'Enable the option for X11 access when building the container'
      isCorrect: false
      explanation: Access to the X11 environment requires system level modification and configuration of the container at runtime, there is no such option available to accomplish this during the building of the container.
  - content: 'Distributing a GPU accelerated workload as a container provides the following benefits:'
    choices: 
    - content: 'Can be deployed across various architectures without need for repackaging'
      isCorrect: false
      explanation:  Containers are capable of targeting multiple platform architectures, but typically require a separate image for each platform target.
    - content: 'Guaranteed to exhibit similar runtime behavior when deployed to homogenous hardware, potentially reduced time to deployment due to not requiring full download of incremental image updates, and easy to understand required solution dependencies by inspecting the associated Dockerfile of a given container image'
      isCorrect: true
      explanation: These are all beneficial features of running a GPU accelerated workload as a container.
    - content: 'GPU acceleration is not possible due to access limitations when running workloads as a container'
      isCorrect: false
      explanation: Containerized workloads can theoretically access any devices made accessible to the host kernel, which include GPU acceleration hardware.