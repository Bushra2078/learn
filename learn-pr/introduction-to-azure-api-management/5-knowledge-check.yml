### YamlMime:ModuleUnit
uid: learn.introduction-to-azure-api-management.5-knowledge-check
title: Knowledge check ### Do not edit: use "Knowledge check" as the title; also, don't add another title in the quiz element or an associated markdown page (if such a markdown page exists which is rare)
metadata:
  unitType: knowledge_check
  title: Knowledge check
  description: Check your knowledge of Azure API Management
  ms.date: 5/1/2021
  author: paulwp
  ms.author: v-pmcfedries
  ms.topic: interactive-tutorial # do we need ms.topic?
durationInMinutes: 5
###########################################################################
###
### General guidance (https://review.docs.microsoft.com/learn-docs/docs/id-guidance-knowledge-check)
###  - Questions are complete sentences ending with a question mark
###  - No true/false questions
###  - 3 answers per question
###  - All answers about the same length
###  - Numeric answers listed in sorted order
###  - No "All of the above" and/or "None of the above" as answer choices
###  - No "Not" or "Except" in questions
###  - No second person ("you") in the questions or answers
###  - Provide a meaningful explanation for both correct and incorrect answers
###
### Question content requirements:
###  - Write 5 questions
###  - Questions 1,2 must test this Learning Objective: "Describe how <attributes> of <product> work to <solve problem>"
###      Guidance: These two questions can be short, no need for a long scenario to analyze. Test if they understand how the product works.
###      Example: "What differentiates an action from a control action in an Azure Logic App?"
###  - Questions 3,4,5 must test this Learning Objective: "Evaluate whether <product> is appropriate to <general product use case>"
###      Guidance: Use scenario questions that ask the learner to analyze a situation with the "when to use" criteria presented in the module.
###      Example: "Suppose you work for a financial company. You're building a system to let your brokers trade financial instruments. Your system must monitor market conditions, detect changes, and execute trades. You'll need to handle a large volume of transactions and you'll need to do it quickly. The faster you can complete trades, the more of an advantage you'll have over your competitors. Which requirement of this system would be difficult for Logic Apps to satisfy?"
###
###########################################################################
content: |
quiz:
  questions:
  - content: "Which of the following Azure API Management components is used to enforce usage quotas?"
    choices:
    - content: "Gateway"
      isCorrect: true
      explanation: "Correct. As part of your API policies, you can set usage quotas by subscription or key and those quotas are enforced when each API request enters the Azure API Management gateway."
    - content: "Developer portal"
      isCorrect: false
      explanation: "Incorrect. Developers use this portal to subscribe to your APIs and those subscriptions are subject to the usage quotas you set, which are enforced by the Azure API Management gateway."
    - content: "Administration interface"
      isCorrect: false
      explanation: "Incorrect. You use the Azure API Management administration interface to set usage quotas, not to enforce them."
  - content: "If an <!--Paul, microlearning guidelines say not to use second person in questions or answer options--> API development team wants to make a minor change to an API, which of the following features is the best way to handle such a change?"
    choices:
    - content: "API version"
      isCorrect: false
      explanation: "Incorrect. You should only use versions for relatively major or breaking changes to the API."
    - content: "API product"
      isCorrect: false
      explanation: "Incorrect. A product is a group of APIs and is not related to making changes to APIs. "
    - content: "API revision"
      isCorrect: true
      explanation: "Correct. You use revisions for relatively minor or non-breaking changes to the API."
  - content: "Suppose an API product manager wants their organization to respond more quickly with API revisions that satisfy customer suggestions. Which one of the following actions would help them meet their goal?"
    choices:
    - content: "Standardizing API specifications"
      isCorrect: true
      explanation: "Correct. Standardizing API specifications helps to reduce the time it takes to develop new and updated API features."
    - content: "Standardizing API documentation"
      isCorrect: false
      explanation: "Incorrect. Although writing standardized API documentation helps developers to quickly get up and running with an API, it doesn't help your in-house developers code API revisions faster."
    - content: "Standardizing API analytics"
      isCorrect: false
      explanation: "Incorrect. By enabling the organization to compare usage and performance across multiple APIs, standardized analytics might help you recognize the need for an API revision, but that analysis in itself doesn't directly enable the revision to be deployed more quickly."
  - content: "Suppose an API administrator with a large deployment of APIs wants to enhance API monetization by encouraging more developers to subscribe to their APIs. Which one of the following API benefits would help them accomplish their goal?"
    choices:
    - content: "Creating a central access point for administration"
      isCorrect: false
      explanation: "Incorrect. Although a centralized API administrative interface helps with administrative operations such as policy creation and user management, it does nothing directly to encourage more developers to use your APIs."
    - content: "Creating a central access point for developers"
      isCorrect: true
      explanation: "Correct. With all your API documentation, code samples, and subscription access in a single developer portal, developers are more likely to find and subscribe to your APIs."
    - content: "Creating a central access point for API deployment."
      isCorrect: false
      explanation: "Incorrect. While it's true that routing all API requests through a single base URL makes it easier to enforce policies and apply transformations, it doesn't do anything directly to encourage developers to subscribe to your APIs."
  - content: "Suppose the senior security engineer in charge of a large API deployment wants to reduce the likelihood of one or more consumers misusing any API by making an excessive number of calls to the API. Which one of the following security policies should they implement to best accomplish this goal?"
    choices:
    - content: "Require subscription keys"
      isCorrect: false
      explanation: "Incorrect. Although requiring a subscription key to send a request to an API is a fundamental way to help ensure authorized access to the API, it does not by itself guard the API against misuse."
    - content: "Require client Basic authentication"
      isCorrect: false
      explanation: "Incorrect. Although requiring a user name and password to send a request to an API can help ensure that only authorized users can access the API, this authentication does not by itself protect the API against misuse."
    - content: "Set rate limits"
      isCorrect: true
      explanation: "Correct. By throttling API access to a specified number of calls over a defined time frame for a subscription or key, you help guard your API against misuse by a consumer."
